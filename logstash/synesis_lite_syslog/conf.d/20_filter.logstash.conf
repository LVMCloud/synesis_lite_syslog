#------------------------------------------------------------------------------
# Copyright (C)2019 Robert Cowart
# 
# The contents of this file and/or repository are subject to the Robert Cowart
# Public License (the "License") and may not be used or distributed except in
# compliance with the License. You may obtain a copy of the License at:
# 
# http://www.koiossian.com/public/robert_cowart_public_license.txt
# 
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
# the specific language governing rights and limitations under the License.
# 
# The Original Source Code was developed by Robert Cowart. Portions created by
# Robert Cowart are Copyright (C)2019 Robert Cowart. All Rights Reserved.
#------------------------------------------------------------------------------

filter {
  # Initialize @metadata values used to control processing flow.
    mutate {
      add_field => {
        "[@metadata][resolve_ip2host]" => "${SYNLITE_SYSLOG_RESOLVE_IP2HOST:false}"
        "[@metadata][syslog_msg_timestamp]" => "${SYNLITE_SYSLOG_MSG_TIMESTAMP:true}"
      }
      rename => {
        "host" => "[event][host]"
        "message" => "[event][message]"
        "type" => "[event][type]"
      }
    }

  # Strip trailing whitespace and newlines from the syslog message.
    mutate {
      gsub => [ "[event][message]", "[\s\n]+$", "" ]
    }

  # Syslog messages can come in various basic formats. Here we check for common patterns and extract the basic fields as well as the logged message.
    grok {
      patterns_dir => "${SYNLITE_SYSLOG_GROK_PATTERNS_DIR:/etc/logstash/synesis_lite_syslog/patterns}"
      match => {
        "[event][message]" => [ "%{KOIOSSYSLOGBASEPARSER}", "%{KOIOSSYSLOGBASEPARSERNOHOST}", "%{KOIOSSYSLOGRFC5424PARSER}" ]
      }
    }
    if "_grokparsefailure" in [tags] {
      # Apply basic handling if message didn't match any expected syslog message format.
      mutate {
        add_field => {
          "[node][ipaddr]" => "%{[event][host]}"
          "[node][hostname]" => "%{[event][host]}"
          "[log][message]" => "%{[event][message]}"
          "[log][severity]" => "undetermined"
        }
      }

      if [event][host] =~ /(?:(?<![0-9])(?:(?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5]))(?![0-9])|((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?)/ {
        # host looks like an IP address.
        if [@metadata][resolve_ip2host] == "true" {
          dns {
            reverse => [ "[node][hostname]" ]
            action => "replace"
            nameserver => "${SYNLITE_SYSLOG_NAMESERVER:127.0.0.1}"
            hit_cache_size => "${SYNLITE_SYSLOG_DNS_HIT_CACHE_SIZE:10000}"
            hit_cache_ttl => "${SYNLITE_SYSLOG_DNS_HIT_CACHE_TTL:900}"
            failed_cache_size => "${SYNLITE_SYSLOG_DNS_FAILED_CACHE_SIZE:25000}"
            failed_cache_ttl => "${SYNLITE_SYSLOG_DNS_FAILED_CACHE_TTL:3600}"
          }
        }
      } else {
        # host must be a hostname.
        if [@metadata][resolve_ip2host] == "true" {
          dns {
            resolve => [ "[node][ipaddr]" ]
            action => "replace"
            nameserver => "${SYNLITE_SYSLOG_NAMESERVER:127.0.0.1}"
            hit_cache_size => "${SYNLITE_SYSLOG_DNS_HIT_CACHE_SIZE:10000}"
            hit_cache_ttl => "${SYNLITE_SYSLOG_DNS_HIT_CACHE_TTL:900}"
            failed_cache_size => "${SYNLITE_SYSLOG_DNS_FAILED_CACHE_SIZE:25000}"
            failed_cache_ttl => "${SYNLITE_SYSLOG_DNS_FAILED_CACHE_TTL:3600}"
          }
        }
        if [node][ipaddr] !~ /(?:(?<![0-9])(?:(?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5]))(?![0-9])|((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?)/ {
          mutate {
            remove_field => [ "[node][ipaddr]" ]
          }
        }
      }
    } else {
      # Decode syslog priority if available.
        if [syslog_pri] {
          syslog_pri { }
          mutate {
            add_field => { "[log][severity]" => "%{[syslog_severity]}" }
          }
          mutate {
            rename => {
              "[syslog_facility]" => "[syslog][facility]"
              "[syslog_facility_code]" => "[syslog][facility_code]"
              "[syslog_pri]" => "[syslog][pri]"
              "[syslog_severity]" => "[syslog][severity]"
              "[syslog_severity_code]" => "[syslog][severity_code]"
            }
          }
        } else {
          mutate {
            add_field => { "[log][severity]" => "undetermined" }
          }
        }

      # Resolve IP or hostname as needed.
        if [node][hostname] {
          # A hostname was found in the syslog message. First make sure it is lowercase.
          mutate {
            lowercase => [ "[node][hostname]" ]
          }
          # Lookup the IP address.
          if [@metadata][resolve_ip2host] == "true" {
            mutate {
              add_field => {
                "[node][ipaddr]" => "%{[node][hostname]}"
              }
            }
            dns {
              resolve => [ "[node][ipaddr]" ]
              action => "replace"
              nameserver => "${SYNLITE_SYSLOG_NAMESERVER:127.0.0.1}"
              hit_cache_size => "${SYNLITE_SYSLOG_DNS_HIT_CACHE_SIZE:10000}"
              hit_cache_ttl => "${SYNLITE_SYSLOG_DNS_HIT_CACHE_TTL:900}"
              failed_cache_size => "${SYNLITE_SYSLOG_DNS_FAILED_CACHE_SIZE:25000}"
              failed_cache_ttl => "${SYNLITE_SYSLOG_DNS_FAILED_CACHE_TTL:3600}"
            }
            if [node][ipaddr] !~ /(?:(?<![0-9])(?:(?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5]))(?![0-9])|((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?)/ {
              # No ipaddr from DNS. If event.host is an IP address we can use that.
              if [event][host] =~ /(?:(?<![0-9])(?:(?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])[.](?:[0-1]?[0-9]{1,2}|2[0-4][0-9]|25[0-5]))(?![0-9])|((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?)/ {
                mutate {
                  replace => { "[node][ipaddr]" => "%{[event][host]}" }
                }
              } else {
                # No IP address could be determined so the field is removed.
                mutate {
                  remove_field => [ "[node][ipaddr]" ]
                }
              }
            }
          }
        } else if [node][ipaddr] {
          # An IP address was found in the syslog message. Lookup the hostname.
          mutate {
            add_field => {
              "[node][hostname]" => "%{[node][ipaddr]}"
            }
          }
          if [@metadata][resolve_ip2host] == "true" {
            dns {
              reverse => [ "[node][hostname]" ]
              action => "replace"
              nameserver => "${SYNLITE_SYSLOG_NAMESERVER:127.0.0.1}"
              hit_cache_size => "${SYNLITE_SYSLOG_DNS_HIT_CACHE_SIZE:10000}"
              hit_cache_ttl => "${SYNLITE_SYSLOG_DNS_HIT_CACHE_TTL:900}"
              failed_cache_size => "${SYNLITE_SYSLOG_DNS_FAILED_CACHE_SIZE:25000}"
              failed_cache_ttl => "${SYNLITE_SYSLOG_DNS_FAILED_CACHE_TTL:3600}"
            }
          }
        } else {
          mutate {
            add_field => { "[node][hostname]" => "undetermined" }
          }
        }

      # Set the date of the record to the timestamp from the syslog message.
        if [@metadata][syslog_timestamp] {
          date {
            locale => "en"
            match => [ "[@metadata][syslog_timestamp]", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "MMM dd yyyy HH:mm:ss", "MMM  d yyyy HH:mm:ss", "ISO8601", "yyyy-MM-dd HH:mm:ss.SSSSSS", "MMM dd HH:mm:ss yyyy", "MMM  d HH:mm:ss yyyy" ]
            timezone => "${SYNLITE_SYSLOG_TZ:UTC}"
            target => "[syslog][timestamp]"
          }
          if [@metadata][syslog_msg_timestamp] == "true" {
            date {
              locale => "en"
              match => [ "[@metadata][syslog_timestamp]", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "MMM dd yyyy HH:mm:ss", "MMM  d yyyy HH:mm:ss", "ISO8601", "yyyy-MM-dd HH:mm:ss.SSSSSS", "MMM dd HH:mm:ss yyyy", "MMM  d HH:mm:ss yyyy" ]
              timezone => "${SYNLITE_SYSLOG_TZ:UTC}"
            }
          }
        }
    }
}
